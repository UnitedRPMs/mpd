From 9e9d7b73d2165f197eeec12ee953add5f49746b7 Mon Sep 17 00:00:00 2001
From: David Woodhouse <David.Woodhouse@intel.com>
Date: Sun, 19 Jul 2009 16:24:43 +0100
Subject: [PATCH 1/1] Add audio_format_init() function

---
 src/audio_format.h                   |    9 +++++++++
 src/audio_parser.c                   |   10 +++++++---
 src/decoder/_flac_common.c           |    5 ++---
 src/decoder/audiofile_plugin.c       |    8 +++-----
 src/decoder/faad_plugin.c            |    6 +-----
 src/decoder/ffmpeg_plugin.c          |    9 +++++----
 src/decoder/mad_plugin.c             |   10 ++--------
 src/decoder/mikmod_plugin.c          |    4 +---
 src/decoder/modplug_plugin.c         |    4 +---
 src/decoder/mp4ff_plugin.c           |    6 +-----
 src/decoder/mpcdec_plugin.c          |    4 +---
 src/decoder/sidplay_plugin.cxx       |    4 +---
 src/decoder/sndfile_decoder_plugin.c |    4 +---
 src/decoder/vorbis_plugin.c          |    3 +--
 src/decoder/wavpack_plugin.c         |    6 +++---
 test/run_encoder.c                   |    8 +++-----
 test/run_filter.c                    |    8 +++-----
 test/run_output.c                    |    8 +++-----
 test/software_volume.c               |    7 ++-----
 19 files changed, 50 insertions(+), 73 deletions(-)

diff --git a/src/audio_format.h b/src/audio_format.h
index 64087d0..e325c1b 100644
--- a/src/audio_format.h
+++ b/src/audio_format.h
@@ -36,6 +36,15 @@ static inline void audio_format_clear(struct audio_format *af)
 	af->channels = 0;
 }
 
+static inline void audio_format_init(struct audio_format *af,
+				     uint32_t sample_rate,
+				     uint8_t bits, uint8_t channels)
+{
+	af->sample_rate = sample_rate;
+	af->bits = bits;
+	af->channels = channels;
+}
+
 static inline bool audio_format_defined(const struct audio_format *af)
 {
 	return af->sample_rate != 0;
diff --git a/src/audio_parser.c b/src/audio_parser.c
index 906b0f8..d29f5f4 100644
--- a/src/audio_parser.c
+++ b/src/audio_parser.c
@@ -41,6 +41,8 @@ audio_format_parse(struct audio_format *dest, const char *src, GError **error)
 {
 	char *endptr;
 	unsigned long value;
+	uint32_t rate;
+	uint8_t bits, channels;
 
 	audio_format_clear(dest);
 
@@ -61,7 +63,7 @@ audio_format_parse(struct audio_format *dest, const char *src, GError **error)
 		return false;
 	}
 
-	dest->sample_rate = value;
+	rate = value;
 
 	/* parse sample format */
 
@@ -81,7 +83,7 @@ audio_format_parse(struct audio_format *dest, const char *src, GError **error)
 		return false;
 	}
 
-	dest->bits = value;
+	bits = value;
 
 	/* parse channel count */
 
@@ -93,7 +95,9 @@ audio_format_parse(struct audio_format *dest, const char *src, GError **error)
 		return false;
 	}
 
-	dest->channels = value;
+	channels = value;
+
+	audio_format_init(dest, rate, bits, channels);
 
 	return true;
 }
diff --git a/src/decoder/_flac_common.c b/src/decoder/_flac_common.c
index 713dfe9..7b34538 100644
--- a/src/decoder/_flac_common.c
+++ b/src/decoder/_flac_common.c
@@ -195,9 +195,8 @@ void flac_metadata_common_cb(const FLAC__StreamMetadata * block,
 
 	switch (block->type) {
 	case FLAC__METADATA_TYPE_STREAMINFO:
-		data->audio_format.bits = (int8_t)si->bits_per_sample;
-		data->audio_format.sample_rate = si->sample_rate;
-		data->audio_format.channels = (int8_t)si->channels;
+		audio_format_init(&data->audio_format, si->sample_rate,
+				  si->bits_per_sample, si->channels);
 		data->total_time = ((float)si->total_samples) / (si->sample_rate);
 		break;
 	case FLAC__METADATA_TYPE_VORBIS_COMMENT:
diff --git a/src/decoder/audiofile_plugin.c b/src/decoder/audiofile_plugin.c
index f66d90d..b4959f6 100644
--- a/src/decoder/audiofile_plugin.c
+++ b/src/decoder/audiofile_plugin.c
@@ -136,11 +136,9 @@ audiofile_stream_decode(struct decoder *decoder, struct input_stream *is)
 	afSetVirtualSampleFormat(af_fp, AF_DEFAULT_TRACK,
 	                         AF_SAMPFMT_TWOSCOMP, bits);
 	afGetVirtualSampleFormat(af_fp, AF_DEFAULT_TRACK, &fs, &bits);
-	audio_format.bits = (uint8_t)bits;
-	audio_format.sample_rate =
-	                      (unsigned int)afGetRate(af_fp, AF_DEFAULT_TRACK);
-	audio_format.channels =
-	              (uint8_t)afGetVirtualChannels(af_fp, AF_DEFAULT_TRACK);
+
+	audio_format_init(&audio_format, afGetRate(af_fp, AF_DEFAULT_TRACK),
+			  bits, afGetVirtualChannels(af_fp, AF_DEFAULT_TRACK)); 
 
 	if (!audio_format_valid(&audio_format)) {
 		g_warning("Invalid audio format: %u:%u:%u\n",
diff --git a/src/decoder/faad_plugin.c b/src/decoder/faad_plugin.c
index d0537dd..1b8b2b7 100644
--- a/src/decoder/faad_plugin.c
+++ b/src/decoder/faad_plugin.c
@@ -262,11 +262,7 @@ faad_decoder_init(faacDecHandle decoder, struct decoder_buffer *buffer,
 
 	decoder_buffer_consume(buffer, nbytes);
 
-	*audio_format = (struct audio_format){
-		.bits = 16,
-		.channels = channels,
-		.sample_rate = sample_rate,
-	};
+	audio_format_init(audio_format, sample_rate, 16, channels);
 
 	return true;
 }
diff --git a/src/decoder/ffmpeg_plugin.c b/src/decoder/ffmpeg_plugin.c
index 03c46a7..f6003d2 100644
--- a/src/decoder/ffmpeg_plugin.c
+++ b/src/decoder/ffmpeg_plugin.c
@@ -267,6 +267,7 @@ ffmpeg_decode_internal(struct ffmpeg_context *ctx)
 	struct audio_format audio_format;
 	enum decoder_command cmd;
 	int total_time;
+	uint8_t bits;
 
 	total_time = 0;
 
@@ -275,13 +276,13 @@ ffmpeg_decode_internal(struct ffmpeg_context *ctx)
 	}
 
 #if LIBAVCODEC_VERSION_INT >= ((51<<16)+(41<<8)+0)
-	audio_format.bits = (uint8_t) av_get_bits_per_sample_format(codec_context->sample_fmt);
+	bits = (uint8_t) av_get_bits_per_sample_format(codec_context->sample_fmt);
 #else
 	/* XXX fixme 16-bit for older ffmpeg (13 Aug 2007) */
-	audio_format.bits = (uint8_t) 16;
+	bits = (uint8_t) 16;
 #endif
-	audio_format.sample_rate = (unsigned int)codec_context->sample_rate;
-	audio_format.channels = codec_context->channels;
+	audio_format_init(&audio_format, codec_context->sample_rate, bits,
+			  codec_context->channels);
 
 	if (!audio_format_valid(&audio_format)) {
 		g_warning("Invalid audio format: %u:%u:%u\n",
diff --git a/src/decoder/mad_plugin.c b/src/decoder/mad_plugin.c
index c6b9d32..85f4506 100644
--- a/src/decoder/mad_plugin.c
+++ b/src/decoder/mad_plugin.c
@@ -1148,13 +1148,6 @@ mp3_read(struct mp3_data *data, struct replay_gain_info **replay_gain_info_r)
 	return ret != DECODE_BREAK;
 }
 
-static void mp3_audio_format(struct mp3_data *data, struct audio_format *af)
-{
-	af->bits = 24;
-	af->sample_rate = (data->frame).header.samplerate;
-	af->channels = MAD_NCHANNELS(&(data->frame).header);
-}
-
 static void
 mp3_decode(struct decoder *decoder, struct input_stream *input_stream)
 {
@@ -1170,7 +1163,8 @@ mp3_decode(struct decoder *decoder, struct input_stream *input_stream)
 		return;
 	}
 
-	mp3_audio_format(&data, &audio_format);
+	audio_format_init(&audio_format, data.frame.header.samplerate, 24,
+			  MAD_NCHANNELS(&data.frame.header));
 
 	decoder_initialized(decoder, &audio_format,
 			    data.input_stream->seekable, data.total_time);
diff --git a/src/decoder/mikmod_plugin.c b/src/decoder/mikmod_plugin.c
index 065c343..e7b7bfb 100644
--- a/src/decoder/mikmod_plugin.c
+++ b/src/decoder/mikmod_plugin.c
@@ -175,9 +175,7 @@ mod_decode(struct decoder *decoder, const char *path)
 		return;
 	}
 
-	audio_format.bits = 16;
-	audio_format.sample_rate = 44100;
-	audio_format.channels = 2;
+	audio_format_init(&audio_format, 44100, 16, 2);
 
 	secPerByte =
 	    1.0 / ((audio_format.bits * audio_format.channels / 8.0) *
diff --git a/src/decoder/modplug_plugin.c b/src/decoder/modplug_plugin.c
index 31f0a47..6c375e6 100644
--- a/src/decoder/modplug_plugin.c
+++ b/src/decoder/modplug_plugin.c
@@ -121,9 +121,7 @@ mod_decode(struct decoder *decoder, struct input_stream *is)
 		return;
 	}
 
-	audio_format.bits = 16;
-	audio_format.sample_rate = 44100;
-	audio_format.channels = 2;
+	audio_format_init(&audio_format, 44100, 16, 2);
 
 	sec_perbyte =
 	    1.0 / ((audio_format.bits * audio_format.channels / 8.0) *
diff --git a/src/decoder/mp4ff_plugin.c b/src/decoder/mp4ff_plugin.c
index cf93829..d2c63f9 100644
--- a/src/decoder/mp4ff_plugin.c
+++ b/src/decoder/mp4ff_plugin.c
@@ -131,11 +131,7 @@ mp4_faad_new(mp4ff_t *mp4fh, int *track_r, struct audio_format *audio_format)
 	}
 
 	*track_r = track;
-	*audio_format = (struct audio_format){
-		.bits = 16,
-		.channels = channels,
-		.sample_rate = sample_rate,
-	};
+	audio_format_init(audio_format, sample_rate, 16, channels);
 
 	if (!audio_format_valid(audio_format)) {
 		g_warning("Invalid audio format: %u:%u:%u\n",
diff --git a/src/decoder/mpcdec_plugin.c b/src/decoder/mpcdec_plugin.c
index 26349f9..a684da1 100644
--- a/src/decoder/mpcdec_plugin.c
+++ b/src/decoder/mpcdec_plugin.c
@@ -193,9 +193,7 @@ mpcdec_decode(struct decoder *mpd_decoder, struct input_stream *is)
 	mpc_demux_get_info(demux, &info);
 #endif
 
-	audio_format.bits = 24;
-	audio_format.channels = info.channels;
-	audio_format.sample_rate = info.sample_freq;
+	audio_format_init(&audio_format, info.sample_freq, 24, info.channels);
 
 	if (!audio_format_valid(&audio_format)) {
 #ifndef MPC_IS_OLD_API
diff --git a/src/decoder/sidplay_plugin.cxx b/src/decoder/sidplay_plugin.cxx
index c62e6b4..54ab746 100644
--- a/src/decoder/sidplay_plugin.cxx
+++ b/src/decoder/sidplay_plugin.cxx
@@ -103,9 +103,7 @@ sidplay_file_decode(struct decoder *decoder, const char *path_fs)
 	/* initialize the MPD decoder */
 
 	struct audio_format audio_format;
-	audio_format.sample_rate = 48000;
-	audio_format.bits = 16;
-	audio_format.channels = 2;
+	audio_format_init(&audio_format, 48000, 16, 2);
 
 	decoder_initialized(decoder, &audio_format, false, -1);
 
diff --git a/src/decoder/vorbis_plugin.c b/src/decoder/vorbis_plugin.c
index d4f81e9..bab1d57 100644
--- a/src/decoder/vorbis_plugin.c
+++ b/src/decoder/vorbis_plugin.c
@@ -324,8 +324,7 @@ vorbis_stream_decode(struct decoder *decoder,
 			vorbis_info *vi = ov_info(&vf, -1);
 			struct replay_gain_info *new_rgi;
 
-			audio_format.channels = vi->channels;
-			audio_format.sample_rate = vi->rate;
+			audio_format_init(&audio_format, vi->rate, 16, vi->channels);
 
 			if (!audio_format_valid(&audio_format)) {
 				g_warning("Invalid audio format: %u:%u:%u\n",
diff --git a/src/decoder/wavpack_plugin.c b/src/decoder/wavpack_plugin.c
index 821536f..f3d7011 100644
--- a/src/decoder/wavpack_plugin.c
+++ b/src/decoder/wavpack_plugin.c
@@ -145,9 +145,9 @@ wavpack_decode(struct decoder *decoder, WavpackContext *wpc, bool can_seek,
 	int bytes_per_sample, output_sample_size;
 	int position;
 
-	audio_format.sample_rate = WavpackGetSampleRate(wpc);
-	audio_format.channels = WavpackGetReducedChannels(wpc);
-	audio_format.bits = WavpackGetBitsPerSample(wpc);
+	audio_format_init(&audio_format, WavpackGetSampleRate(wpc),
+			  WavpackGetBitsPerSample(wpc), 
+			  WavpackGetReducedChannels(wpc));
 
 	/* round bitwidth to 8-bit units */
 	audio_format.bits = (audio_format.bits + 7) & (~7);
diff --git a/test/run_encoder.c b/test/run_encoder.c
index 8cb1c6d..a9b00e9 100644
--- a/test/run_encoder.c
+++ b/test/run_encoder.c
@@ -41,11 +41,7 @@ encoder_to_stdout(struct encoder *encoder)
 int main(int argc, char **argv)
 {
 	GError *error = NULL;
-	struct audio_format audio_format = {
-		.sample_rate = 44100,
-		.bits = 16,
-		.channels = 2,
-	};
+	struct audio_format audio_format;
 	bool ret;
 	const char *encoder_name;
 	const struct encoder_plugin *plugin;
@@ -66,6 +62,8 @@ int main(int argc, char **argv)
 	else
 		encoder_name = "vorbis";
 
+	audio_format_init(&audio_format, 44100, 16, 2);
+
 	/* create the encoder */
 
 	plugin = encoder_plugin_get(encoder_name);
diff --git a/test/run_output.c b/test/run_output.c
index adf6e1d..a280f88 100644
--- a/test/run_output.c
+++ b/test/run_output.c
@@ -100,11 +100,7 @@ load_audio_output(struct audio_output *ao, const char *name)
 int main(int argc, char **argv)
 {
 	struct audio_output ao;
-	struct audio_format audio_format = {
-		.sample_rate = 44100,
-		.bits = 16,
-		.channels = 2,
-	};
+	struct audio_format audio_format;
 	bool success;
 	GError *error = NULL;
 	char buffer[4096];
@@ -116,6 +112,8 @@ int main(int argc, char **argv)
 		return 1;
 	}
 
+	audio_format_init(&audio_format, 44100, 16, 2);
+
 	g_thread_init(NULL);
 
 	/* read configuration file (mpd.conf) */
diff --git a/test/software_volume.c b/test/software_volume.c
index 9a9fd56..9e8c8e7 100644
--- a/test/software_volume.c
+++ b/test/software_volume.c
@@ -35,11 +35,7 @@
 int main(int argc, char **argv)
 {
 	GError *error = NULL;
-	struct audio_format audio_format = {
-		.sample_rate = 48000,
-		.bits = 16,
-		.channels = 2,
-	};
+	struct audio_format audio_format;
 	bool ret;
 	static char buffer[4096];
 	ssize_t nbytes;
@@ -57,6 +53,7 @@ int main(int argc, char **argv)
 			return 1;
 		}
 	}
+	audio_format_init(&audio_format, 48000, 16, 2);
 
 	while ((nbytes = read(0, buffer, sizeof(buffer))) > 0) {
 		pcm_volume(buffer, nbytes, &audio_format, PCM_VOLUME_1 / 2);
-- 
1.6.2.5

